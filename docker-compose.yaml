version: '3.5'
services:
  mongo:
    restart: always
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongo/data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    # networks:
    #   static-network:
    #     ipv4_address: 172.20.128.2
  python-scraper:
    build: 
      context: scraper
    container_name: python-scraper
    image: teambd3/python-scraper:1.0.0
    depends_on:
      mongo:
        condition: service_healthy
  python-api:
    build: 
      context: api
    container_name: python-api
    image: teambd3/python-api:1.0.0
    ports:
    - 5000:5000
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://localhost:5000/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  dashboard:
    container_name: dashboard
    image: teambd3/dashboard:1.0.0
    build:
      context: dashboard
    volumes:
      - './dashboard:/app'
      - '/dashboard/app/node_modules'
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      python-api:
        condition: service_healthy
# networks:
#   static-network:
#     ipam:
#       config:
#         - subnet: 172.20.0.0/16